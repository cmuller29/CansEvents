// <auto-generated />
using System;
using CansInnov.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CansInnov.Persistence.Migrations
{
    [DbContext(typeof(CansEventsDbContext))]
    [Migration("20231115222002_AddAudit3")]
    partial class AddAudit3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CansInnov.Domain.Entities.Atelier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ATELIER");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_DEBUT_ATELIER");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_FIN_ATELIER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DESCRIPTION_ATELIER");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_EVENEMENT");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LienReunion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LIEN_REUNION");

                    b.Property<string>("Lieu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LIEU_ATELIER");

                    b.Property<int>("NbParticipantMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("NOMBRE_PARTICIPANT_MAX");

                    b.Property<string>("NomIntervenant")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("NOM_INTERVENANT");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TITRE_ATELIER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TYPE_ATELIER");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("T_ATELIER", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8116ce46-ee6c-44fc-bf82-327e2d533319"),
                            CreatedBy = "cmuller",
                            CreatedDate = new DateTime(2023, 11, 15, 23, 20, 2, 312, DateTimeKind.Local).AddTicks(8887),
                            DateDebut = new DateTime(2023, 11, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2023, 11, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DEscription",
                            EventId = new Guid("5f3899b9-ebe7-4479-b6f4-921858a50fc3"),
                            Lieu = "lieu",
                            NbParticipantMax = 10,
                            NomIntervenant = "Intervenant",
                            Titre = "Atelier 1",
                            Type = "Presentiel"
                        },
                        new
                        {
                            Id = new Guid("a1f76469-79fe-455d-8ce2-952938561e38"),
                            CreatedBy = "cmuller",
                            CreatedDate = new DateTime(2023, 11, 15, 23, 20, 2, 312, DateTimeKind.Local).AddTicks(8900),
                            DateDebut = new DateTime(2023, 11, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2023, 11, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DEscription",
                            EventId = new Guid("5f3899b9-ebe7-4479-b6f4-921858a50fc3"),
                            Lieu = "lieu",
                            NbParticipantMax = 10,
                            NomIntervenant = "Intervenant",
                            Titre = "Atelier 2",
                            Type = "Presentiel"
                        });
                });

            modelBuilder.Entity("CansInnov.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_EVENEMENT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_DEBUT_EVENEMENT");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_FIN_EVENEMENT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("DEscription de base")
                        .HasColumnName("DESCRIPTION_EVENEMENT");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Visuel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("VISUEL_EVENEMENT");

                    b.HasKey("Id");

                    b.ToTable("T_EVENEMENT", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f3899b9-ebe7-4479-b6f4-921858a50fc3"),
                            CreatedBy = "cmuller",
                            CreatedDate = new DateTime(2023, 11, 15, 23, 20, 2, 312, DateTimeKind.Local).AddTicks(8751),
                            DateDebut = new DateTime(2023, 11, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2023, 11, 24, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DEscription",
                            Titre = "Titre"
                        });
                });

            modelBuilder.Entity("CansInnov.Domain.Entities.Atelier", b =>
                {
                    b.HasOne("CansInnov.Domain.Entities.Event", "Event")
                        .WithMany("Ateliers")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CUSTOM_ATELIER_EVENT");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("CansInnov.Domain.Entities.Event", b =>
                {
                    b.Navigation("Ateliers");
                });
#pragma warning restore 612, 618
        }
    }
}
